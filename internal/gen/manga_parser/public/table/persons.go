//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Persons = newPersonsTable("public", "persons", "")

type personsTable struct {
	postgres.Table

	//Columns
	ID         postgres.ColumnString
	Email      postgres.ColumnString
	TelegramID postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PersonsTable struct {
	personsTable

	EXCLUDED personsTable
}

// AS creates new PersonsTable with assigned alias
func (a PersonsTable) AS(alias string) *PersonsTable {
	return newPersonsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PersonsTable with assigned schema name
func (a PersonsTable) FromSchema(schemaName string) *PersonsTable {
	return newPersonsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PersonsTable with assigned table prefix
func (a PersonsTable) WithPrefix(prefix string) *PersonsTable {
	return newPersonsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PersonsTable with assigned table suffix
func (a PersonsTable) WithSuffix(suffix string) *PersonsTable {
	return newPersonsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPersonsTable(schemaName, tableName, alias string) *PersonsTable {
	return &PersonsTable{
		personsTable: newPersonsTableImpl(schemaName, tableName, alias),
		EXCLUDED:     newPersonsTableImpl("", "excluded", ""),
	}
}

func newPersonsTableImpl(schemaName, tableName, alias string) personsTable {
	var (
		IDColumn         = postgres.StringColumn("id")
		EmailColumn      = postgres.StringColumn("email")
		TelegramIDColumn = postgres.IntegerColumn("telegram_id")
		allColumns       = postgres.ColumnList{IDColumn, EmailColumn, TelegramIDColumn}
		mutableColumns   = postgres.ColumnList{EmailColumn, TelegramIDColumn}
	)

	return personsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		Email:      EmailColumn,
		TelegramID: TelegramIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
