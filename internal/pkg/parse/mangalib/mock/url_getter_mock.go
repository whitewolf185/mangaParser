// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/whitewolf185/mangaparser/internal/pkg/parse/mangalib (interfaces: UrlGetter)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	config "github.com/whitewolf185/mangaparser/internal/config"
)

// MockUrlGetter is a mock of UrlGetter interface.
type MockUrlGetter struct {
	ctrl     *gomock.Controller
	recorder *MockUrlGetterMockRecorder
}

// MockUrlGetterMockRecorder is the mock recorder for MockUrlGetter.
type MockUrlGetterMockRecorder struct {
	mock *MockUrlGetter
}

// NewMockUrlGetter creates a new mock instance.
func NewMockUrlGetter(ctrl *gomock.Controller) *MockUrlGetter {
	mock := &MockUrlGetter{ctrl: ctrl}
	mock.recorder = &MockUrlGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUrlGetter) EXPECT() *MockUrlGetterMockRecorder {
	return m.recorder
}

// GetUrlByID mocks base method.
func (m *MockUrlGetter) GetUrlByID(arg0 context.Context, arg1 uuid.UUID, arg2 config.MangaSourceType) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrlByID", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrlByID indicates an expected call of GetUrlByID.
func (mr *MockUrlGetterMockRecorder) GetUrlByID(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrlByID", reflect.TypeOf((*MockUrlGetter)(nil).GetUrlByID), arg0, arg1, arg2)
}
